#개념 정리
의존성 주입 (Dependency injection)
하나의 객체가 다른 객체의 의존성을 제공하는 테크닉
@Autowired, @Service, @Repository 를 이용해서 컨트롤러, 서비스, 저장소를 연결시켜줌
-> 이를 스프링 빈 컨테이너에서 수행함.
-> (컨트롤러<->서비스), (서비스<->저장소) 를 연결하는 어노테이션이 @Autowired

스프링 빈을 등록하는 2가지 방법
    컴포넌트 스캔과 자동 의존관계 설정
    자바 코드로 직접 스프링 빈 등록하기
컴포넌트 스캔 원리
    @Component 애노테이션이 있으면 스프링 빈으로 자동 등록된다.
    @Controller 컨트롤러가 스프링 빈으로 자동 등록된 이유도 컴포넌트 스캔 때문이다.
    @Component 를 포함하는 다음 애노테이션도 스프링 빈으로 자동 등록된다.(아래 3가지)
        @Controller
        @Service
        @Repository

*컨트롤러, 서비스, 리포지토리는 각각 1개씩만 지정한다.(-싱글톤패턴-)

컴포턴트 스캔 -> 간편하고 다른 추가적인 코드 필요없이 어노테이션 만으로 의존성 주입 가능
자바코드로 직접 스프링 빈 등록 -> 직접 코드를 작성해서 의존성을 추가해야한다는 불편함이 있음. 하지만,
리포지토리 변경과 같은 경우에 다른 코드를 수정할 필요없이 configuration 코드만 수정해도됨.

@Autowired는 스프링 빈으로 등록한 객체에 대해서만 작동한다.